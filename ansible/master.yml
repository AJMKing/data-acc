---
- hosts: all
  become: true
  vars:
    pip_install_packages:
      - name: docker
    docker_users:
      - "centos"
    docker_compose_version: "1.22.0"

  roles:
    - geerlingguy.repo-epel
    - geerlingguy.pip
    - geerlingguy.docker

- hosts: all
  become: true
  vars:
      lustre_release: "2.10.4"
  tasks:
    - yum:
        name: git,go
        state: present
    - name: Create entries in /etc/hosts for all nodes
      lineinfile:
        path: /etc/hosts
        line: "{{ hostvars[item]['ansible_default_ipv4']['address'] }} {{ item }}.novalocal {{ item }}"
        regexp: "^.* {{ item }}$"
        create: no
        state: present
      with_items:
        - "{{ ansible_play_hosts }}"
    - name: enable lustre server repo
      yum_repository:
        name: lustre-server
        description: lustre-server
        file: lustre-repo
        baseurl: https://downloads.whamcloud.com/public/lustre/lustre-{{ lustre_release }}/el7/patchless-ldiskfs-server
        gpgcheck: no
    - name: enable lustre client repo
      yum_repository:
        name: lustre-client
        description: lustre-client
        file: lustre-repo
        baseurl: https://downloads.whamcloud.com/public/lustre/lustre-{{ lustre_release }}/el7/client
        gpgcheck: no
    - name: enable lustre e2fs repo
      yum_repository:
        name: e2fsprogs-wc
        description: e2fsprogs-wc
        file: lustre-repo
        baseurl: https://downloads.whamcloud.com/public/e2fsprogs/latest/el7
        gpgcheck: no
    - name: Install Lustre Server
      yum:
        name: "lustre-{{ lustre_release }}"
        state: present
    - name: Install Lustre Client
      yum:
        name: "lustre-client-{{ lustre_release }}"
        state: present

- hosts: all
  tasks:
    - file:
        path: ~/go/github.com/JohnGarbutt/
        state: directory
    - git:
        repo: 'https://github.com/JohnGarbutt/data-acc.git'
        dest: ~/go/src/github.com/JohnGarbutt/data-acc

- hosts: slurm-master[0]
  vars:
      recreate: false
  tasks:
    - docker_service:
        project_src: ~/go/src/github.com/JohnGarbutt/data-acc/ansible/slurm-master
        pull: yes
        state: absent
        remove_volumes: yes
      when: recreate|bool
    - docker_service:
        project_src: ~/go/src/github.com/JohnGarbutt/data-acc/ansible/slurm-master
        pull: yes
      register: output
    - name: ensure slurm cluster registered in db
      shell: |
        sleep 10 && docker exec slurmctld bash -c "/usr/bin/sacctmgr --immediate add cluster name=linux" && docker restart slurmdbd slurmctld
      when: output.changed

- hosts: slurm-workers
  vars:
      recreate: false
  tasks:
    - docker_service:
        project_src: ~/go/src/github.com/JohnGarbutt/data-acc/ansible/slurm-worker
        pull: yes
        state: absent
        remove_volumes: yes
      when: recreate|bool
    - docker_service:
        project_src: ~/go/src/github.com/JohnGarbutt/data-acc/ansible/slurm-worker
        pull: yes

- hosts: dac-workers
  vars:
      recreate: false
  tasks:
    - docker_service:
        project_src: ~/go/src/github.com/JohnGarbutt/data-acc/ansible/dac-worker
        pull: yes
        state: absent
        remove_volumes: yes
      when: recreate|bool
    - docker_service:
        project_src: ~/go/src/github.com/JohnGarbutt/data-acc/ansible/dac-worker
        pull: yes
