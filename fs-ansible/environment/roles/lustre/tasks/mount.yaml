---
- name: load lustre module
  command: modprobe -v lustre
  tags: [ 'never', 'start_lustre']


- name: Start MDT/MGS
  block:
    - name: Create MGSDT mount dir
      file:
        path: /lustre/{{ group_names[0] }}/MGSDT/{{ item }}
        state: directory
        recurse: yes
      with_items: "{{ mdts }}"

    - name: mount MDT/MGS
      command: mount -t lustre /dev/{{ item }} /lustre/{{ group_names[0] }}/MGSDT/{{ item }}
      register: command_result
      failed_when: "command_result.rc != 0 and ('is already mounted' not in command_result.stderr)"
      changed_when: "command_result.rc == 0"
      loop: "{{ mdts }}"

  when:
    - mdts is defined
  tags: [ 'never', 'start_mgsdt']


- name: Start OST
  block:
    - name: Create OST mount dir
      file:
        path: /lustre/{{ group_names[0] }}/OST{{ item }}
        state: directory
        recurse: yes
      with_items: "{{ osts }}"

    - name: mount OSTs
      command: mount -t lustre /dev/{{ item }} /lustre/{{ group_names[0] }}/OST{{ item }}
      register: command_result
      failed_when: "command_result.rc != 0 and ('is already mounted' not in command_result.stderr)"
      changed_when: "command_result.rc == 0"
      with_items: "{{ osts }}"

  when:
    - osts is defined
  tags: [ 'never', 'start_osts']


- name: Mount FS
  block:
    - name: ensure mount dir exists
      file:
        path: "/mnt/lustre/{{ group_names[0] }}"
        state: directory
        recurse: yes
    - name: mount lustre fs
      command: "mount -t lustre {{ mgsnode }}:/{{ group_names[0] }} /mnt/lustre/{{ group_names[0] }}"
      register: command_result
      failed_when: "command_result.rc != 0 and ('is already mounted' not in command_result.stderr)"
      changed_when: "command_result.rc == 0"
  tags: [ 'never', 'mount_fs']


- name: umount FS
  block:
    - name: umount lustre fs
      command: "umount -l /mnt/lustre/{{ group_names[0] }}"
      register: command_result
      failed_when: "command_result.rc != 0 and ('not mounted' not in command_result.stderr) and ('mountpoint not found' not in command_result.stderr)"
      changed_when: "command_result.rc == 0"

    - name: ensure mount dir deleted
      file:
        path: "/mnt/lustre/{{ group_names[0] }}"
        state: absent
  tags: [ 'never', 'umount_fs']


- name: Stop OST
  block:
    - name: umount OSTs
      command: umount /lustre/{{ group_names[0] }}/OST{{ item }}
      register: command_result
      failed_when: "command_result.rc != 0 and ('not mounted' not in command_result.stderr) and ('mountpoint not found' not in command_result.stderr)"
      changed_when: "command_result.rc == 0"
      with_items: "{{ osts }}"

    - name: Remove OST mount dir
      file:
        path: /lustre/{{ group_names[0] }}/OST{{ item }}
        state: absent
      with_items: "{{ osts }}"
  when:
    - osts is defined
  tags: [ 'never', 'stop_osts']


- name: Stop MDT/MGS
  block:
    - name: umount MDT/MGS
      command: umount /lustre/{{ group_names[0] }}/MGSDT/{{ item }}
      register: command_result
      failed_when: "command_result.rc != 0 and ('not mounted' not in command_result.stderr) and ('mountpoint not found' not in command_result.stderr)"
      changed_when: "command_result.rc == 0"
      loop: "{{ mdts }}"

    - name: Remove MGSDT mount dir
      file:
        path: /lustre/{{ group_names[0] }}/MGSDT
        state: absent
  when:
    - mdts is defined
  tags: [ 'never', 'stop_mgsdt']


- name: umount all lustre
  command: umount -a -t lustre
  when:
    - osts is defined
  tags: [ 'never', 'stop_alllustre']
