---
- set_fact:
    fs_name: "{{ group_names[0] }}"
    mdt_disk: "{{ mdt | default([]) }}"
    mgs_disk: "{{ mgs | default([]) }}"
    osts: "{{ osts | default({}) }}"
  tags: ['never', 'format', 'mount', 'unmount']

- set_fact:
    all_disks: "{{ osts.keys() | union([mdt_disk]) | union([mgs_disk]) | flatten | unique | list }}"
  tags: ['never', 'format', 'mount', 'unmount']

- name: Format disks
  command: "mkfs.ext4 -i 8192 -I 512 -J size=400 -Odir_index,filetype /dev/{{ item }}"
  loop: "{{ all_disks }}"
  tags: ['never', 'format']

- name: Setup disks
  block:

    - name: Create mount point dir
      file:
        path: /data/{{ fs_name }}/{{ item }}
        state: directory
        recurse: yes
      loop: "{{ all_disks }}"

    - name: Mount EXT4 OSTs
      command: mount -onoatime,nodiratime,nobarrier,user_xattr /dev/{{ item }} /data/{{ fs_name }}/{{ item }}
      register: command_result
      failed_when: "command_result.rc != 0 and ('is already mounted' not in command_result.stderr)"
      changed_when: "command_result.rc == 0"
      loop: "{{ all_disks }}"

  tags: ['never', 'mount']


- name: Unmount disks
  block:

    - name: Mount EXT4 OSTs
      command: umount -l /data/{{ fs_name }}/{{ item }}
      register: command_result
      failed_when: "command_result.rc != 0 and ('not mounted' not in command_result.stderr) and ('mountpoint not found' not in command_result.stderr)"
      changed_when: "command_result.rc == 0"
      loop: "{{ all_disks }}"

    - name: Delete mount point dir
      file:
        path: /data/{{ fs_name }}
        state: absent

  tags: ['never', 'unmount']
