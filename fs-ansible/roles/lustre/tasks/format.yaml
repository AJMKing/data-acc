---
- set_fact:
    osts: "{{ vars[fs_name + '_osts'] | default({}) }}"
    mgs: "{{ vars[fs_name + '_mgs'] | default(omit) }}"
    mdt: "{{ vars[fs_name + '_mdt'] | default(omit) }}"
    mgsnode: "{{ vars[fs_name + '_mgsnode'] }}"
    client_port: "{{ vars[fs_name + '_client_port'] }}"
  tags: [ 'never', 'format_mgs', 'reformat_mgs', 'format']

- name: Ensure MGS has been formatted
  command: /usr/sbin/mkfs.lustre --mgs /dev/{{ mgs }}
  register: command_result
  failed_when: "command_result.rc != 0 and ('was previously formatted for lustre' not in command_result.stderr)"
  changed_when: "command_result.rc == 0"
  when:
    - mgs is defined
  tags: [ 'never', 'format_mgs', 'format']

- name: Reformat MGS
  command: /usr/sbin/mkfs.lustre --mgs --reformat /dev/{{ mgs }}
  when:
    - mgs is defined
  tags: [ 'never', 'reformat_mgs']

- name: Reformat MDT
  command: /usr/sbin/mkfs.lustre --mdt --reformat --fsname={{ fs_name }} --index=0 --mgsnode={{ mgsnode }} /dev/{{ mdt }}
  when:
    - mdt is defined
  tags: [ 'never', 'reformat_mdts', 'format']

- name: Reformat OSTs
  command: /usr/sbin/mkfs.lustre --ost --reformat --fsname={{ fs_name }} --index={{ item.value }} --mgsnode={{ mgsnode }} /dev/{{ item.key }}
  loop: "{{ osts|dict2items }}"
  when:
    - osts is defined
  tags: [ 'never', 'reformat_osts', 'format']
