// Code generated by MockGen. DO NOT EDIT.
// Source: internal/pkg/fakewarp/actions.go

// Package mocks is a generated GoMock package.
package mocks

import (
	fakewarp "github.com/RSE-Cambridge/data-acc/internal/pkg/fakewarp"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockFakewarpActions is a mock of FakewarpActions interface
type MockFakewarpActions struct {
	ctrl     *gomock.Controller
	recorder *MockFakewarpActionsMockRecorder
}

// MockFakewarpActionsMockRecorder is the mock recorder for MockFakewarpActions
type MockFakewarpActionsMockRecorder struct {
	mock *MockFakewarpActions
}

// NewMockFakewarpActions creates a new mock instance
func NewMockFakewarpActions(ctrl *gomock.Controller) *MockFakewarpActions {
	mock := &MockFakewarpActions{ctrl: ctrl}
	mock.recorder = &MockFakewarpActionsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockFakewarpActions) EXPECT() *MockFakewarpActionsMockRecorder {
	return m.recorder
}

// CreatePersistentBuffer mocks base method
func (m *MockFakewarpActions) CreatePersistentBuffer(c fakewarp.CliContext) (string, error) {
	ret := m.ctrl.Call(m, "CreatePersistentBuffer", c)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreatePersistentBuffer indicates an expected call of CreatePersistentBuffer
func (mr *MockFakewarpActionsMockRecorder) CreatePersistentBuffer(c interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePersistentBuffer", reflect.TypeOf((*MockFakewarpActions)(nil).CreatePersistentBuffer), c)
}
